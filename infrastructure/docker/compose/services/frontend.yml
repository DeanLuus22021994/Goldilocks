# Frontend Tooling Service - Node.js Alpine Ultra-Lightweight
# Adheres to: LIGHTWEIGHT, MODERNIZE, DRY, LOW FOOTPRINT

services:
  goldilocks-frontend:
    image: node:22-alpine3.20  # MODERNIZE: Latest Node.js LTS with Alpine 3.20
    container_name: goldilocks-frontend
    restart: unless-stopped

    # LIGHTWEIGHT: Minimal resource allocation
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.25'

    # DRY: Environment configuration
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NODE_OPTIONS: --max-old-space-size=512
      NPM_CONFIG_UPDATE_NOTIFIER: false
      NPM_CONFIG_FUND: false
      NPM_CONFIG_AUDIT_LEVEL: moderate
      CI: ${CI:-false}

    # STRUCTURED: Volume management - references shared volumes
    volumes:
      - type: bind
        source: ${DOCKER_CONTEXT_PATH:-../../../..}
        target: /workspace
        consistency: cached
      - goldilocks-node-modules:/workspace/node_modules
      - goldilocks-npm-cache:/home/node/.npm
      - goldilocks-yarn-cache:/home/node/.cache/yarn

    # STRUCTURED: Working directory
    working_dir: /workspace

    # LOW FOOTPRINT: Keep container running efficiently
    command: ["sh", "-c", "while :; do sleep 3600; done"]

    # LOW FOOTPRINT: Network configuration - references shared network
    networks:
      - goldilocks-network

    # STRUCTURED: Profile management
    profiles: ["dev", "frontend", "tools"]

    # SECURITY: Non-root user
    user: "1000:1000"

    # MODERNIZE: Health check
    healthcheck:
      test: ["CMD", "node", "--version"]
      start_period: 10s
      start_interval: 5s
      interval: 30s
      timeout: 5s
      retries: 2

    # PERFORMANCE: System optimizations
    tmpfs:
      - /tmp:size=100M,noexec,nosuid,nodev

    init: true  # RELIABILITY: Proper signal handling
