# Backend Application Service - Ultra-Performance Development
# Adheres to: MODERNIZE, DRY, STRUCTURED, MONOLITHIC, HIGH COMPATIBILITY

services:
  goldilocks-backend:
    build:
      context: ${DOCKER_CONTEXT_PATH:-../../../..}
      dockerfile: infrastructure/docker/dockerfiles/Dockerfile.multi-stage
      target: ${BUILD_TARGET:-devcontainer}
      # MODERNIZE: Advanced BuildKit features
      cache_from:
        - goldilocks:${BUILD_TARGET:-devcontainer}
        - goldilocks:builder
        - goldilocks:tools
      # HIGH COMPATIBILITY: Build arguments
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.14.0rc3-trixie}
        BUILDKIT_INLINE_CACHE: ${BUILDKIT_INLINE_CACHE:-1}
        BUILDX_EXPERIMENTAL: ${BUILDX_EXPERIMENTAL:-1}
        TARGETPLATFORM: ${TARGETPLATFORM:-linux/amd64}
        BUILDPLATFORM: ${BUILDPLATFORM:-linux/amd64}
      # PERFORMANCE: Parallel builds
      x-bake:
        platforms:
          - linux/amd64
        cache-to:
          - type=inline
        cache-from:
          - type=registry,ref=goldilocks:buildcache

    container_name: goldilocks-backend
    restart: unless-stopped

    # MODERNIZE: Resource optimization
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "2.0"
        reservations:
          memory: 512M
          cpus: "0.5"

    # DRY: Command configuration
    command: >
      sh -c "
        export PATH=/opt/venv/bin:$$PATH &&
        echo 'ðŸš€ Starting Goldilocks backend...' &&
        flask run --host 0.0.0.0 --port 9000 --reload --debugger
      "

    # STRUCTURED: Volume management with performance optimization
    volumes:
      - type: bind
        source: ${DOCKER_CONTEXT_PATH:-../../../..}
        target: /workspaces/Goldilocks
        consistency: cached
      # PERFORMANCE: Cache volumes for development tools - references shared volumes
      - goldilocks-pip-cache:/tmp/pip-cache
      - goldilocks-pre-commit-cache:/tmp/pre-commit-cache
      - goldilocks-mypy-cache:/tmp/mypy-cache
      - goldilocks-ruff-cache:/tmp/ruff-cache
      - goldilocks-pytest-cache:/tmp/pytest-cache
      - goldilocks-build-cache:/tmp/build-cache
      - goldilocks-bytecode-cache:/tmp/bytecode-cache
      # SEPARATION OF CONCERNS: Access to provisioned extensions (read-only access)
      - goldilocks-vscode-server-extensions:/root/.vscode-server-insiders/extensions:ro
      - goldilocks-vscode-server-data:/root/.vscode-server-insiders/data

    # HIGH COMPATIBILITY: Environment configuration from shared file
    env_file:
      - ../shared/environment.env

    environment:
      # Development cache directories (container-specific)
      PIP_CACHE_DIR: /tmp/pip-cache
      PRE_COMMIT_HOME: /tmp/pre-commit-cache
      MYPY_CACHE_DIR: /tmp/mypy-cache
      RUFF_CACHE_DIR: /tmp/ruff-cache
      PYTEST_CACHE_DIR: /tmp/pytest-cache

      # Build optimization (container-specific)
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      BUILDX_EXPERIMENTAL: 1

      # Performance monitoring (development)
      FLASK_PROFILER_ENABLED: ${FLASK_PROFILER_ENABLED:-true}
      FLASK_PROFILER_PATH: ${FLASK_PROFILER_PATH:-/tmp/profiler}

    # STRUCTURED: Port configuration
    ports:
      - "${BACKEND_PORT:-9000}:9000"

    # STRUCTURED: Working directory
    working_dir: /workspaces/Goldilocks

    # LOW FOOTPRINT: Network configuration - references shared network
    networks:
      - goldilocks-network

    # RELIABILITY: Dependencies
    depends_on:
      goldilocks-db:
        condition: service_healthy
        restart: true
      goldilocks-extensions:
        condition: service_healthy
        restart: false # Extensions provision once

    # STRUCTURED: Profile management
    profiles: ["dev", "backend"]

    # MODERNIZE: Security and performance
    security_opt:
      - seccomp:unconfined

    cap_add:
      - SYS_PTRACE

    # PERFORMANCE: System optimization
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1

    # MODERNIZE: Health monitoring
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:9000/health", "||", "exit", "1"]
      start_period: 60s
      start_interval: 10s
      interval: 30s
      timeout: 10s
      retries: 3
