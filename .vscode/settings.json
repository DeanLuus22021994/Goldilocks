{
  // ------------- Python Project Configuration ----------------
  "python.defaultInterpreterPath": "./venv-3.13/bin/python",
  "python.terminal.activateEnvironment": false,
  "python.analysis.autoSearchPaths": true,
  "python.analysis.extraPaths": [
    "${workspaceFolder}/src",
    "${workspaceFolder}"
  ],
  "python.analysis.include": [
    "${workspaceFolder}/src",
    "${workspaceFolder}/*.py"
  ],
  "python.envFile": "${workspaceFolder}/infrastructure/docker/compose/shared/environment.env",
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": ["src/tests", "-v", "--tb=short"],
  "python.testing.autoTestDiscoverOnSaveEnabled": true,
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.typeCheckingMode": "strict",
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.formatting.provider": "none",
  "python.analysis.stubPath": "${workspaceFolder}/src",
  "python.formatting.blackArgs": ["--line-length", "88"],

  // ------------- Project-Specific Terminal Environment ----------------
  "terminal.integrated.env.linux": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  "terminal.integrated.env.osx": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  "terminal.integrated.env.windows": {
    "PYTHONPATH": "${workspaceFolder}\\src"
  },

  // ------------- Editor Configuration ----------------
  "editor.rulers": [88],
  "[python]": {
    "editor.rulers": [88],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 88,
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit",
      "source.fixAll.ruff": "explicit"
    },
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },

  // ------------- Project File Exclusions ----------------
  "files.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    ".pytest_cache": true,
    "*.egg-info": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/build": true,
    "**/dist": true,
    "**/.coverage": true,
    "**/htmlcov": true
  },

  // ------------- Project Type Checking ----------------
  "mypy-type-checker.importStrategy": "fromEnvironment",
  "mypy-type-checker.args": ["--strict", "--ignore-missing-imports"],
  "pylance.insidersChannel": "off",

  // ------------- Project JSON Schemas ----------------
  "json.schemas": [
    {
      "fileMatch": [
        "**/.devcontainer/devcontainer.json",
        "**/devcontainer.json"
      ],
      "url": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json"
    }
  ],

  // ------------- GitHub Copilot Project Settings ----------------
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": false,
    "markdown": true,
    "python": true,
    "javascript": true,
    "typescript": true,
    "json": true,
    "jsonc": true
  },
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.chat.agent.runTasks": true,
  "github.copilot.chat.agent.autoFix": true,
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use conventional commit format. Be specific about what changed and why. Include scope when relevant (feat(api): add user authentication endpoint). Follow Goldilocks project conventions."
    }
  ],
  "github.copilot.chat.reviewSelection.instructions": [
    {
      "file": ".github/instructions/code-style.instructions.md"
    },
    {
      "file": ".github/instructions/python.instructions.md"
    }
  ],

  // ------------- AI Agent Project Configuration ----------------
  "chat.agent.enabled": true,
  "chat.agent.maxRequests": 1000,
  "chat.checkpoints.enabled": true,
  "chat.editing.autoAccept": "always",
  "chat.promptFiles": true,
  "chat.promptFilesLocations": {
    ".github/prompts": true
  },
  "chat.instructionsFilesLocations": {
    ".github/instructions": true
  },
  "chat.tools.autoApprove": true,
  "chat.tools.enabled": {
    "readFile": true,
    "writeFile": true,
    "createFile": true,
    "deleteFile": true,
    "listFiles": true,
    "codebase": true,
    "changes": true,
    "usages": true,
    "problems": true,
    "runTasks": true,
    "fetch": true,
    "terminal": true,
    "shell": true,
    "filesystem": true,
    "git": true,
    "docker": true,
    "network": true,
    "system": true
  },

  // ------------- Unrestricted Project Access ----------------
  "chat.tools.files.autoApprove": {
    "**/*": true,
    "**/.env*": true,
    "**/secrets/**": true,
    "**/*.key": true,
    "**/*.pem": true,
    "**/.ssh/**": true,
    "**/node_modules/**": true,
    "/": true,
    "/*": true,
    "/**/*": true
  },
  "chat.tools.edits.autoApprove": {
    "**/*": true,
    "**/.vscode/*.json": true,
    "**/.env*": true,
    "**/secrets/**": true,
    "**/*.key": true,
    "**/*.pem": true,
    "/": true,
    "/*": true,
    "/**/*": true
  },
  "chat.tools.terminal.autoApprove": {
    "**": true,
    "*": true,
    "pytest": true,
    "black": true,
    "isort": true,
    "mypy": true,
    "flake8": true,
    "pre-commit": true,
    "git": true,
    "ls": true,
    "cat": true,
    "head": true,
    "tail": true,
    "rm": true,
    "sudo": true,
    "docker": true,
    "pip": true,
    "npm": true,
    "yarn": true,
    "make": true,
    "chmod": true,
    "chown": true,
    "mv": true,
    "cp": true,
    "mkdir": true,
    "rmdir": true,
    "/.*": true
  },

  // ------------- Project Agent Capabilities ----------------
  "chat.todoListTool.enabled": true,
  "chat.useAgentsMdFile": true,
  "github.copilot.chat.virtualTools.threshold": 128,
  "chat.agent.autoCommit": true,
  "chat.agent.allowSystemAccess": true,
  "chat.agent.allowFileSystemAccess": true,
  "chat.agent.allowNetworkAccess": true,
  "chat.agent.allowExecuteCommands": true,
  "chat.tools.systemCommands.enabled": true,
  "chat.tools.systemCommands.autoApprove": true,
  "chat.tools.dangerous.enabled": true,
  "chat.tools.dangerous.autoApprove": true,
  "github.copilot.chat.agent.allowDangerousOperations": true,
  "github.copilot.chat.agent.restrictionLevel": "none",

  // ------------- Ruff Configuration ----------------
  "ruff.enable": true,
  "ruff.organizeImports": true,
  "ruff.lineLength": 88,
  "ruff.codeAction.fixViolation": {
    "enable": true
  },
  "ruff.fixAll": true,
  "python-envs.pythonProjects": []
}
