{
  "python.defaultInterpreterPath": "/opt/venv/bin/python",
  "python.terminal.activateEnvironment": false,
  "python.analysis.autoSearchPaths": true,
  "python.analysis.extraPaths": [
    "${workspaceFolder}/src",
    "${workspaceFolder}"
  ],
  "python.analysis.include": [
    "${workspaceFolder}/src",
    "${workspaceFolder}/*.py"
  ],
  "python.envFile": "${workspaceFolder}/infrastructure/docker/compose/shared/environment.env",
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": ["src/tests", "-v", "--tb=short"],
  "python.testing.autoTestDiscoverOnSaveEnabled": true,
  "editor.rulers": [88],
  "python.formatting.blackArgs": ["--line-length", "88"],
  "[python]": {
    "editor.rulers": [88],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 88
  },
  "files.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    ".pytest_cache": true,
    "*.egg-info": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/build": true,
    "**/dist": true,
    "**/.coverage": true,
    "**/htmlcov": true
  },
  "python.analysis.diagnosticMode": "workspace",
  "mypy-type-checker.importStrategy": "fromEnvironment",
  "pylance.insidersChannel": "off",
  "python.analysis.typeCheckingMode": "strict",
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.formatting.provider": "none",
  "python.analysis.stubPath": "${workspaceFolder}/src",
  "json.schemas": [
    {
      "fileMatch": [
        "**/.devcontainer/devcontainer.json",
        "**/devcontainer.json"
      ],
      "url": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json"
    }
  ],
  // GitHub Copilot Settings
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": false,
    "markdown": true,
    "python": true,
    "javascript": true,
    "typescript": true,
    "json": true,
    "jsonc": true
  },
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.chat.agent.runTasks": true,
  "github.copilot.chat.agent.autoFix": true,
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use conventional commit format. Be specific about what changed and why. Include scope when relevant (feat(api): add user authentication endpoint)."
    }
  ],
  "github.copilot.chat.reviewSelection.instructions": [
    {
      "file": ".github/instructions/code-style.instructions.md"
    },
    {
      "file": ".github/instructions/python.instructions.md"
    }
  ],
  "chat.agent.enabled": true,
  "chat.agent.maxRequests": 200,
  "chat.checkpoints.enabled": true,
  "chat.editing.autoAccept": "off",
  "chat.promptFiles": true,
  "chat.promptFilesLocations": {
    ".github/prompts": true
  },
  "chat.instructionsFilesLocations": {
    ".github/instructions": true
  },
  "chat.tools.autoApprove": false,
  "chat.tools.edits.autoApprove": {
    "**/*": true,
    "**/.vscode/*.json": false,
    "**/.env*": false,
    "**/secrets/**": false,
    "**/*.key": false,
    "**/*.pem": false
  },
  "chat.tools.terminal.autoApprove": {
    "pytest": true,
    "black": true,
    "isort": true,
    "mypy": true,
    "flake8": true,
    "pre-commit": true,
    "/^git (status|log|show|diff)$/": true,
    "/^ls\\b/": true,
    "/^cat\\b/": true,
    "/^head\\b/": true,
    "/^tail\\b/": true,
    "rm": false,
    "sudo": false,
    "/dangerous/": false
  },
  "chat.todoListTool.enabled": true,
  "chat.useAgentsMdFile": true,
  "github.copilot.chat.virtualTools.threshold": 128
}
