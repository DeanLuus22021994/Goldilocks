{
  "name": "Goldilocks Ultra-Performance DevContainer",
  "build": {
    "context": "..",
    "dockerfile": "../infrastructure/docker/dockerfiles/Dockerfile.multi-stage",
    "target": "devcontainer",
    "args": {
      "PYTHON_VERSION": "3.14.0rc3-trixie",
      "BUILDKIT_INLINE_CACHE": "1",
      "BUILDX_EXPERIMENTAL": "1"
    },
    "options": ["--platform=linux/amd64", "--build-arg=BUILDKIT_INLINE_CACHE=1"]
  },
  "workspaceFolder": "/workspaces/Goldilocks",
  "remoteUser": "root",

  "hostRequirements": {
    "cpus": 10,
    "memory": "14gb",
    "storage": "64gb",
    "gpu": "optional"
  },

  "runArgs": [
    "--privileged",
    "--gpus=all",
    "--shm-size=4g",
    "--ipc=host",
    "--ulimit=memlock=-1",
    "--ulimit=stack=67108864",
    "--device=/dev/dri",
    "--security-opt=seccomp=unconfined",
    "--cap-add=SYS_PTRACE"
  ],

  "containerEnv": {
    "FLASK_APP": "src.goldilocks.app",
    "FLASK_ENV": "development",
    "FLASK_DEBUG": "1",
    "PYTHONPATH": "/workspaces/Goldilocks/src",
    "PYTHONUNBUFFERED": "1",
    "PYTHONDONTWRITEBYTECODE": "0",
    "PYTHONOPTIMIZE": "0",
    "PIP_CACHE_DIR": "/tmp/pip-cache",
    "PRE_COMMIT_HOME": "/tmp/pre-commit-cache",
    "MYPY_CACHE_DIR": "/tmp/mypy-cache",
    "RUFF_CACHE_DIR": "/tmp/ruff-cache",
    "PYTEST_CACHE_DIR": "/tmp/pytest-cache",
    "DOCKER_BUILDKIT": "1",
    "BUILDKIT_PROGRESS": "plain",
    "BUILDX_EXPERIMENTAL": "1",
    "CUDA_VISIBLE_DEVICES": "all",
    "NVIDIA_VISIBLE_DEVICES": "all",
    "NVIDIA_DRIVER_CAPABILITIES": "all"
  },

  "mounts": [
    "source=goldilocks-venv-optimized,target=/opt/venv,type=volume",
    "source=goldilocks-python-cache,target=/root/.cache/python,type=volume",
    "source=goldilocks-pip-cache,target=/tmp/pip-cache,type=volume",
    "source=goldilocks-build-cache,target=/tmp/build-cache,type=volume",
    "source=goldilocks-bytecode-cache,target=/tmp/bytecode-cache,type=volume",
    "source=goldilocks-precompiled,target=/opt/precompiled,type=volume",
    "source=vscode-server-insiders,target=/root/.vscode-server,type=volume",
    "source=vscode-extensions-cache,target=/root/.vscode-server/extensions,type=volume",
    "source=goldilocks-dev-cache,target=/tmp/goldilocks-cache,type=volume",
    "source=goldilocks-pre-commit,target=/tmp/pre-commit-cache,type=volume",
    "source=goldilocks-mypy,target=/tmp/mypy-cache,type=volume",
    "source=goldilocks-ruff,target=/tmp/ruff-cache,type=volume",
    "source=goldilocks-pytest,target=/tmp/pytest-cache,type=volume",
    "source=docker-buildx-cache,target=/tmp/.buildx-cache,type=volume"
  ],

  "initializeCommand": [
    "bash",
    "-c",
    "docker volume create goldilocks-venv-optimized; docker volume create goldilocks-python-cache; docker volume create goldilocks-pip-cache; docker volume create goldilocks-build-cache; docker volume create goldilocks-bytecode-cache; docker volume create goldilocks-precompiled; docker volume create vscode-server-insiders; docker volume create vscode-extensions-cache; docker volume create goldilocks-dev-cache; docker volume create goldilocks-pre-commit; docker volume create goldilocks-mypy; docker volume create goldilocks-ruff; docker volume create goldilocks-pytest; docker volume create docker-buildx-cache"
  ],

  "onCreateCommand": "echo 'ðŸš€ Ultra-performance DevContainer initializing...'",

  "updateContentCommand": "echo 'âš¡ Updating optimized environment...'",

  "postCreateCommand": [
    "bash",
    "-c",
    "echo 'ðŸ”¥ Setting up ultra-performance Python environment...' && export PATH=/opt/venv/bin:$PATH && if [ ! -f /opt/venv/pyvenv.cfg ]; then python -m venv /opt/venv --upgrade-deps; fi && /opt/venv/bin/pip install --upgrade pip setuptools wheel && /opt/venv/bin/pip install --no-cache-dir -r requirements.txt && /opt/venv/bin/python -m compileall -b -f src/ && echo 'âœ… Ultra-performance environment ready!'"
  ],

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "charliermarsh.ruff",
        "github.copilot",
        "github.copilot-chat",
        "ms-python.debugpy",
        "tamasfe.even-better-toml"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/opt/venv/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.analysis.typeCheckingMode": "strict",
        "python.analysis.autoImportCompletions": true,
        "python.analysis.indexing": true,
        "python.analysis.packageIndexDepths": [
          { "name": "", "depth": 2, "includeAllSymbols": true }
        ],
        "git.repositorySearchDepth": 1,
        "git.autoRepositoryDetection": true,
        "git.autofetch": true,
        "files.watcherExclude": {
          "**/.git/objects/**": true,
          "**/.git/subtree-cache/**": true,
          "**/node_modules/**": true,
          "**/.hg/store/**": true,
          "**/__pycache__/**": true,
          "**/.pytest_cache/**": true,
          "**/.mypy_cache/**": true,
          "**/.ruff_cache/**": true
        },
        "search.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/.mypy_cache": true,
          "**/.ruff_cache": true,
          "**/build": true,
          "**/dist": true
        },
        "python.terminal.executeInFileDir": false,
        "python.experiments.enabled": true,
        "python.analysis.completeFunctionParens": true
      }
    }
  },

  "forwardPorts": [9000],
  "portsAttributes": {
    "9000": {
      "label": "Flask Development Server",
      "onAutoForward": "notify"
    }
  },
  "shutdownAction": "stopContainer"
}
